"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var crypto_js_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto-js/sha256 */ \"(app-pages-browser)/./node_modules/crypto-js/sha256.js\");\n/* harmony import */ var crypto_js_sha256__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto_js_sha256__WEBPACK_IMPORTED_MODULE_2__);\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// \"use client\"\n// import axios from 'axios';\n// import { useState } from 'react';\n// export default function Home() {\n//     const [url, setUrl] = useState<any>('');\n//     const [status, setStatus] = useState<any>(null);\n//     const [loading, setLoading] = useState<any>(false);\n//     const checkUrl = async () => {\n//         setLoading(true);\n//         setStatus(null);\n//         const apiKey = \"AIzaSyDRBDka441IpzS2E1v3d6LGsW0_mudif7Q\";\n//         const apiUrl = `https://safebrowsing.googleapis.com/v4/threatMatches:find?key=${apiKey}`;\n//         const requestBody = {\n//             client: {\n//                 clientId: 'your-client-id', // Optional, can be any string\n//                 clientVersion: '1.0.0',\n//             },\n//             threatInfo: {\n//                 threatTypes: ['MALWARE', 'SOCIAL_ENGINEERING'],\n//                 platformTypes: ['ANY_PLATFORM'],\n//                 threatEntryTypes: ['URL'],\n//                 threatEntries: [{ url }],\n//             },\n//         };\n//         try {\n//             const response = await axios.get(`https://safebrowsing.googleapis.com/v5alpha1/hashLists:batchGet?key=AIzaSyDRBDka441IpzS2E1v3d6LGsW0_mudif7Q`)\n//             console.log(response.data)\n//             // if (data.matches) {\n//             //     setStatus('Phishing link detected!');\n//             // } else {\n//             //     setStatus('Safe link.');\n//             // }\n//         } catch (error: any) {\n//             setStatus('Error checking the link.');\n//             console.log(error)\n//         }\n//         setLoading(false);\n//     };\n//     return (\n//         <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n//             <div className=\"bg-white shadow-lg rounded-lg p-6 w-full max-w-md\">\n//                 <h1 className=\"text-2xl font-bold mb-4 text-center\">Phishing Link Checker</h1>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Enter URL\"\n//                     className=\"w-full p-3 border rounded-md mb-4\"\n//                     value={url}\n//                     onChange={(e) => setUrl(e.target.value)}\n//                 />\n//                 <button\n//                     className={`w-full py-3 bg-blue-500 text-white rounded-md font-semibold transition ${loading ? 'opacity-50 cursor-not-allowed' : ''\n//                         }`}\n//                     onClick={checkUrl}\n//                     disabled={loading}\n//                 >\n//                     {loading ? 'Checking...' : 'Check URL'}\n//                 </button>\n//                 {status && (\n//                     <div\n//                         className={`mt-4 text-center p-3 rounded-md ${status.includes('Phishing') ? 'bg-red-100 text-red-600' : 'bg-green-100 text-green-600'\n//                             }`}\n//                     >\n//                         {status}\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// }\n// \"use client\";\n// import { useState } from \"react\";\n// import SHA256 from \"crypto-js/sha256\"; // For hashing\n// import * as protobuf from \"protobufjs\"; // For decoding protocol buffers\n// export default function Home() {\n//   const [url, setUrl] = useState<string>(\"\");\n//   const [status, setStatus] = useState<string | null>(null);\n//   const [loading, setLoading] = useState<boolean>(false);\n//   const checkUrl = async () => {\n//     setLoading(true);\n//     setStatus(null);\n//     // Step 1: Hash the URL using SHA256\n//     const hashedUrl = SHA256(url).toString();\n//     const hashPrefix = hashedUrl.substring(0, 8); // Use the first few characters (adjustable)\n//     const apiKey = \"AIzaSyDRBDka441IpzS2E1v3d6LGsW0_mudif7Q\"; // Replace with your API key\n//     const apiUrl = `https://safebrowsing.googleapis.com/v5/hashes:search?key=${apiKey}&hashPrefixes=${hashPrefix}`;\n//     try {\n//       const response = await fetch(apiUrl, {\n//         method: \"GET\",\n//       });\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch data\");\n//       }\n//       // Step 2: Decode the protocol buffer response (will be binary data)\n//       const buffer = await response.arrayBuffer();\n//       const root = await protobuf.load(\"path-to-proto-file.proto\"); // Load your proto file here\n//       const SafeBrowsingMessage = root.lookupType(\"SafeBrowsingMessage\");\n//       // Decode the buffer\n//       const decodedMessage:any = SafeBrowsingMessage.decode(new Uint8Array(buffer));\n//       // Step 3: Analyze the decoded message\n//       if (decodedMessage.matches) {\n//         setStatus(\"Phishing link detected!\");\n//       } else {\n//         setStatus(\"Safe link.\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error checking URL:\", error);\n//       setStatus(\"Error checking the link.\");\n//     }\n//     setLoading(false);\n//   };\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n//       <div className=\"bg-white shadow-lg rounded-lg p-6 w-full max-w-md\">\n//         <h1 className=\"text-2xl font-bold mb-4 text-center\">Phishing Link Checker</h1>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter URL\"\n//           className=\"w-full p-3 border rounded-md mb-4\"\n//           value={url}\n//           onChange={(e) => setUrl(e.target.value)}\n//         />\n//         <button\n//           className={`w-full py-3 bg-blue-500 text-white rounded-md font-semibold transition ${loading ? \"opacity-50 cursor-not-allowed\" : \"\"\n//             }`}\n//           onClick={checkUrl}\n//           disabled={loading}\n//         >\n//           {loading ? \"Checking...\" : \"Check URL\"}\n//         </button>\n//         {status && (\n//           <div\n//             className={`mt-4 text-center p-3 rounded-md ${status.includes(\"Phishing\") ? \"bg-red-100 text-red-600\" : \"bg-green-100 text-green-600\"\n//               }`}\n//           >\n//             {status}\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n // For hashing\nfunction Home() {\n    _s();\n    const [url, setUrl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const checkUrl = async ()=>{\n        if (!isValidUrl(url)) {\n            setStatus(\"Please enter a valid URL.\");\n            return;\n        }\n        setLoading(true);\n        setStatus(null);\n        // Generate SHA256 hash of the URL\n        const hashedUrl = crypto_js_sha256__WEBPACK_IMPORTED_MODULE_2___default()(url).toString(); // This should be in hexadecimal\n        // Step 1: Create a 4-byte hash prefix from the SHA256 hash\n        const hashPrefix = Buffer.from(hashedUrl.substring(0, 4), \"hex\").toString(\"base64\");\n        console.log(\"Hash Prefix (Base64):\", hashPrefix); // Log the base64 hash prefix\n        const apiKey = process.env.NEXT_PUBLIC_GOOGLE_API_KEY; // Ensure the API key is set\n        const apiUrl = \"https://safebrowsing.googleapis.com/v5/hashes:search?key=AIzaSyDRBDka441IpzS2E1v3d6LGsW0_mudif7Q&hashPrefixes=\".concat(hashPrefix);\n        try {\n            // Send GET request\n            const response = await fetch(apiUrl, {\n                method: \"GET\"\n            });\n            if (!response.ok) {\n                const errorResponse = await response.json();\n                console.error(\"API Error:\", errorResponse);\n                throw new Error(\"API error: \".concat(errorResponse.error.message));\n            }\n            // Step 2: Decode the response as needed (implement this if you want to analyze the response)\n            const data = await response.json();\n            console.log(\"Response Data:\", data);\n            // Analyze the data as necessary\n            if (data.fullHashes.length > 0) {\n                setStatus(\"Threat detected!\");\n            } else {\n                setStatus(\"Safe link.\");\n            }\n        } catch (error) {\n            console.error(\"Error checking URL:\", error);\n            setStatus(\"Error checking the link.\");\n        } finally{\n            setLoading(false);\n        }\n    };\n    const isValidUrl = (urlString)=>{\n        try {\n            new URL(urlString);\n            return true;\n        } catch (_) {\n            return false;\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-gray-100 flex items-center justify-center\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"bg-white shadow-lg rounded-lg p-6 w-full max-w-md\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                    className: \"text-2xl font-bold mb-4 text-center\",\n                    children: \"Phishing Link Checker\"\n                }, void 0, false, {\n                    fileName: \"/home/devseyi/Documents/DEV-TOPI/bammy/src/app/page.tsx\",\n                    lineNumber: 245,\n                    columnNumber: 17\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Enter URL\",\n                    className: \"w-full p-3 border rounded-md mb-4\",\n                    value: url,\n                    onChange: (e)=>setUrl(e.target.value)\n                }, void 0, false, {\n                    fileName: \"/home/devseyi/Documents/DEV-TOPI/bammy/src/app/page.tsx\",\n                    lineNumber: 246,\n                    columnNumber: 17\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    className: \"w-full py-3 bg-blue-500 text-white rounded-md font-semibold transition \".concat(loading ? \"opacity-50 cursor-not-allowed\" : \"\"),\n                    onClick: checkUrl,\n                    disabled: loading,\n                    children: loading ? \"Checking...\" : \"Check URL\"\n                }, void 0, false, {\n                    fileName: \"/home/devseyi/Documents/DEV-TOPI/bammy/src/app/page.tsx\",\n                    lineNumber: 253,\n                    columnNumber: 17\n                }, this),\n                status && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mt-4 text-center p-3 rounded-md \".concat(status.includes(\"Phishing\") ? \"bg-red-100 text-red-600\" : \"bg-green-100 text-green-600\"),\n                    children: status\n                }, void 0, false, {\n                    fileName: \"/home/devseyi/Documents/DEV-TOPI/bammy/src/app/page.tsx\",\n                    lineNumber: 262,\n                    columnNumber: 21\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/devseyi/Documents/DEV-TOPI/bammy/src/app/page.tsx\",\n            lineNumber: 244,\n            columnNumber: 13\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/devseyi/Documents/DEV-TOPI/bammy/src/app/page.tsx\",\n        lineNumber: 243,\n        columnNumber: 9\n    }, this);\n}\n_s(Home, \"mfWGfDRIjg8ZQiIjoQqU7rC+TUs=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ })

});